今までのは「テーブルの利用方法」

テーブルを作れるようにするための権限の付け方

GRANT 権限名 TO ユーザー名
REVOKE 権限名 FROM ユーザー名

データベース管理者が使える、GRANT（権限付与）REVOKE（権限剥奪）

テーブルの作り方

CREATE TABLE テーブル名 (
    列名１ 入れる型,
    列名２ 入れる型,
    列名３ 入れる型
)

すでに同じ名前のテーブルがあると、それを削除して作り直す
そこで
CREATE TABLE IF NOT EXISTS 
で、もし同じ名前のテーブルがなければ、という前提がつく

型の種類

DATE XXXX-XX-XX
INTERGER 数字
VARCHER(文字数) 文字（空白を作る）
CHAR(文字数) 文字（空白を削る）


基本的にCREATEしたあとはNULLで埋まっている
デフォルト値を決めることができる

CREATE TABLE テーブル名 (
    列名 入れる型 DEFAULT デフォルト値
)

テーブルの削除
DROP テーブル名
(DROP IF EXISTS という、もしもすでにあれば。というコードもある)
テーブルの列の追加、削除

ALTER TABLE テーブル名 ADD 列名 型

ALTER TABER テーブル名 DROP 列名



制約、という、人為的ミスの対策機能

CREATE TABLE テーブル名 (
    列名 入れる型 DEFAULT (デフォルト値) 制約
)

制約には
NOT NULL
・もしNULLなら、デフォルト値を入れる
CHECK(条件式)
・条件式に当てはまる数値しか入れない
UNIQUE
・重複した内容は入らない
PRIMARY KEY 
・主キー制約という。主キーの目的に沿った制約である、NOT NULL,UNIQUEのどちらの機能も持っている

PRIMARY KEY は、同時に複数の列につけることができる

CREATE TABLE テーブル名 (
    PRIMARY KEY(列名１,列名２)
)



データを作るために、基準として参照、引用するデータが変更されて、正しくデータが作れなくなることがある
そのときに使えるのが外部キー制約

CREATE TABLE テーブル名 (
    列名 入れる型 DEFAULT (デフォルト値) REFERENCES 参照元テーブル名(参照列名)
)
指定された参照列名が変更されるとエラーを出し、変更をキャンセルする

CREATE TABLE テーブル名 (
    FOREIGN KEY (参照元列名)
     REFERENCES 参照元テーブル名(参照列名)
)
と、あとから指定もできる