WHEREで使う表現で特殊な比較演算子

>=,<=

・以上、以下を表す。本来は=が先だが、SQLでは後ろに来る


<>

・等しくない、を表す。他言語では「!=」であることが多い


LIKE '%XX%'

・%とは、パターン文字と呼ばれる特殊な文字
・任意の０文字以上の文字列という意味、正規表現の「*」と同じ。

例：（'あ%'の場合、「あ」の後ろに０文字以上の文字列がある、という意味になる）


LIKE '_XX_'

・_もパターン文字
・任意の１文字という意味、正規表現の「.」と同じ。
例：（'あ_'の場合、「あ」の後ろに一文字だけなにかがある、という意味になる）


LIKE '_XX$_' ESCAPE '$'

・ESCAPEで指定した文字の後ろにあるパターン文字を、普通の文字として扱う
例：('XX$%' ESCAPE '$' の場合、$の後ろの%はただの文字として扱うので、XX%という文字列という意味になる)


NULLとは

・何も格納されてない空の状態
・WHEREで扱うには、列名 IS NULL、列名 IS NOT NULL、と表す。


WHERE 列名 BETWEEN 10 AND 20


・10 <= 列名 <=20と同じ意味
・あまり使わない、知識として知っておくだけでいい。


WHERE 列名 IN ('条件１','条件２')

・複数の条件を同時に扱う
・列名に条件のどれかが含まれているかを判断する。
・イメージは()の中身全てと「列名 = 条件」している。どれかが当てはまって入れは表示される。
・「,」は、「OR」と思っていい。
・列名に条件のどれかが含まれていないかを判断する「NOT IN 」も存在する


WHERE 列名 < ANY  ('条件１','条件２')

・複数の条件を同時に扱う
・列名に条件のどれかが当てはまっているかを判断する。
・イメージは()の中身全てと「列名 < 条件」している。どれかが当てはまって入れは表示される。
・「<」以外にも比較演算子が使える。


WHERE 列名 < ALL  ('条件１','条件２')

・複数の条件を同時に扱う
・列名に条件のすべてが当てはまっているかを判断する。
・イメージは()の中身全てと「列名 < 条件」している。すべて当てはまっていれば表示される。
・「<」以外にも比較演算子が使える。
・「,」は「AND」と思っていい


WHERE 列名１ = '条件1'
OR 列名２ = '条件２'


・条件を複数指定し、どれかが当てはまっていれば出力される


WHERE 列名１ = '条件1'
AND 列名２ = '条件２'

・条件を複数指定し、すべて当てはまっていれば出力される


WHERE NOT 列名 = '条件'

・NOTをつけることで、条件式と全く正反対な条件に当てはまるものを出力する。
。「=」なら「<>」、「>」なら「<=」


ORとANDについて

「A」OR「B」OR「C」AND「D」
の場合、最初に比較されるのは「C」AND「D」 である。
そのため、先に行いたいORの処理には()で囲む必要がある。

WHERE (「A」
OR 「B」
OR 「C」)
AND 「D」

のように、()を、WHEREやOR等のコマンドの後ろから始まり、条件式の後ろで終わるようにつけると、()A OR B OR C AND Dの中を優先して行うようになる


学籍番号のような、内容（名前、生年月日、性別等）がすべて同じでも、区別ができるような番号を、「主キー」という
主キーには、意図せずとも主キーの役割を果たす「自然キー」と、主キーのために追加された「人工キー」がある

